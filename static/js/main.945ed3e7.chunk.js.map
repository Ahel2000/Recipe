{"version":3,"sources":["logo.svg","Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","map","ingredient","text","src","alt","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","onSubmit","e","preventDefault","type","value","onChange","target","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"sPAAe,I,qBCkBAA,EAfF,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,MAAMC,EAA8B,EAA9BA,SAASC,EAAqB,EAArBA,MAAMC,EAAe,EAAfA,YAChC,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,6BAAKN,IACL,6BACKG,EAAYI,KAAI,SAAAC,GAAU,OACvB,6BAAKA,EAAWC,YAGxB,4BAAIR,IACJ,qBAAKS,IAAKR,EAAOS,IAAI,SC0ClBC,EAlDL,WACR,IADa,EAIcC,mBAAS,IAJvB,mBAINC,EAJM,KAIEC,EAJF,OAKYF,mBAAS,IALrB,mBAKNG,EALM,KAKCC,EALD,OAMUJ,mBAAS,WANnB,mBAMNK,EANM,KAMAC,EANA,KAQbC,qBAAU,WACRC,MAEA,CAACH,IAEH,IAUMG,EAAU,uCAAC,8BAAAC,EAAA,sEAEMC,MAAM,mCAAD,OAAoCL,EAApC,8DAFX,cAETM,EAFS,gBAGEA,EAASC,OAHX,OAGTC,EAHS,OAIfX,EAAWW,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MALF,2CAAD,qDAOhB,OACE,sBAAKvB,UAAU,MAAf,UACE,uBAAM0B,SAdM,SAAAC,GACdA,EAAEC,iBACFb,EAASH,IAYoBZ,UAAU,cAArC,UACE,uBAAOA,UAAU,aAAa6B,KAAK,OAAOC,MAAOlB,EAAQmB,SApB5C,SAAAJ,GACjBd,EAAUc,EAAEK,OAAOF,OACnBN,QAAQC,IAAIb,MAmBR,wBAAQZ,UAAU,gBAAgB6B,KAAK,SAAvC,uBAEF,qBAAK7B,UAAU,UAAf,SACCU,EAAQP,KAAI,SAAAD,GAAM,OACjB,cAAC,EAAD,CAEAN,MAAOM,EAAOA,OAAO+B,MACrBpC,SAAUK,EAAOA,OAAOL,SACxBC,MAAOI,EAAOA,OAAOJ,MACrBC,YAAaG,EAAOA,OAAOH,aAJtBG,EAAOA,OAAO+B,gBChCZC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,0B","file":"static/js/main.945ed3e7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport style from './recipe.module.css';\r\n\r\nconst Recipe=({title,calories,image,ingredients})=>{\r\n    return(\r\n        <div className={style.recipe}>\r\n            <h1>{title}</h1>\r\n            <ol>\r\n                {ingredients.map(ingredient=>(\r\n                    <li>{ingredient.text}</li>\r\n                ))}\r\n            </ol>\r\n            <p>{calories}</p>\r\n            <img src={image} alt=\"\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recipe;","import logo from './logo.svg';\nimport './App.css';\nimport Recipe from './Recipe';\nimport React,{useEffect,useState}  from \"react\";\n\nconst App=() =>{\n  const APP_ID=\"f9792ca6\";\n  const APP_KEY=\"8b80357c21e8a3da0c8ced3ba3db7219\";\n\n  const [recipes,setRecipes]=useState([]);\n  const [search,setSearch]=useState(\"\");\n  const [query,setQuery]=useState('chicken')\n\n  useEffect(()=>{\n    getRecipes();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[query]);\n\n  const updateSearch=e=>{\n    setSearch(e.target.value);\n    console.log(search);\n  }\n\n  const getSearch=e=>{\n    e.preventDefault();\n    setQuery(search);\n  }\n\n  const getRecipes=async()=>{\n    // eslint-disable-next-line no-template-curly-in-string\n    const response=await fetch(`https://api.edamam.com/search?q=${query}&app_id=f9792ca6&app_key=8b80357c21e8a3da0c8ced3ba3db7219`);\n    const data=await response.json();\n    setRecipes(data.hits);\n    console.log(data.hits);\n  }\n  return(\n    <div className=\"App\">\n      <form onSubmit={getSearch} className=\"search-form\">\n        <input className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch}/>\n        <button className=\"submit-button\" type=\"submit\">Search</button>\n      </form>\n      <div className=\"recipes\">\n      {recipes.map(recipe=>(\n        <Recipe\n        key={recipe.recipe.label}\n        title={recipe.recipe.label}\n        calories={recipe.recipe.calories}\n        image={recipe.recipe.image}\n        ingredients={recipe.recipe.ingredients}\n        />\n      ))}\n      </div>\n    </div>\n  )\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__2xAGS\"};"],"sourceRoot":""}